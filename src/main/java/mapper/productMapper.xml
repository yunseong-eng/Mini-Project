<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="productMapper">

    <!-- resultMap을 사용하여 DTO의 필드와 DB 컬럼을 명시적으로 매핑 -->
    <resultMap id="productResultMap" type="product">
        <result property="productId" column="product_id" />               <!-- 상품 ID -->
        <result property="ctg" column="ctg" />                           <!-- 카테고리 -->
        <result property="productName" column="product_name" />           <!-- 상품 이름 -->
        <result property="productPrice" column="product_price" />         <!-- 상품 가격 -->
        <result property="productQty" column="product_qty" />             <!-- 상품 수량 -->
        <result property="productImage" column="product_image" />         <!-- 상품 이미지 -->
        <result property="productDescription" column="product_description" /> <!-- 상품 설명 -->
        <result property="hit" column="hit" />                           <!-- 조회수 -->
        <result property="reply" column="reply" />                       <!-- 후기 수 -->
        <result property="logtime" column="logtime" />                   <!-- 등록 날짜 -->
    </resultMap>
    <!-- 상품 목록 조회 -->
    <select id="getProductList" resultMap="productResultMap">
        SELECT product_id, ctg, product_name, product_price, product_qty, product_image, 
               product_description, hit, reply, logtime
        FROM PRODUCTS
        ORDER BY product_id DESC
        LIMIT #{startNum}, #{pageSize}
    </select>

    <!-- 총 상품 수 조회 -->
    <select id="getTotalProducts" resultType="int">
        SELECT COUNT(*) FROM PRODUCTS
    </select>


    <!-- 카테고리별 상품 조회 -->
    <select id="getProductsByCategory" resultMap="productResultMap">
        SELECT product_id, ctg, product_name, product_price, product_qty, product_image, 
               product_description, hit, reply, logtime
        FROM PRODUCTS
        WHERE ctg = #{ctg}
        ORDER BY product_id DESC
    </select>
    
    <!-- 상품 등록 -->
    <insert id="insertProduct" parameterType="product">
        INSERT INTO PRODUCTS (ctg, product_name, product_price, product_qty, product_image, 
                              product_description, hit, reply, logtime)
        VALUES (#{ctg}, #{productName}, #{productPrice}, #{productQty}, #{productImage}, 
                #{productDescription}, 0, 0, NOW())
    </insert>
    
    <!-- 상품삭제 -->
    <delete id="deleteProduct">
    DELETE FROM PRODUCTS WHERE product_id = #{productId}
	</delete>
	
	<!-- 상품 ID로 특정 상품 조회(수정) -->
    <select id="getProductById" resultMap="productResultMap" parameterType="int">
        SELECT product_id, ctg, product_name, product_price, product_qty, product_image, 
               product_description, hit, reply, logtime
        FROM PRODUCTS
        WHERE product_id = #{productId}
    </select>
    
    <!-- 수정처리  -->
    <update id="updateProduct" parameterType="product">
    UPDATE PRODUCTS 
    SET product_name = #{productName}, 
        product_price = #{productPrice}, 
        product_qty = #{productQty}, 
        ctg = #{ctg}, 
        product_description = #{productDescription}, 
        product_image = #{productImage} 
    WHERE product_id = #{productId}
	</update>

    <!-- 상세페이지 -->
    <select id="getProductDetail" parameterType="String" resultMap="productResultMap">
        SELECT * FROM PRODUCTS WHERE product_id = #{productId}
    </select>
    
    <!-- 카테고리별 상품 조회 -->
    <select id="getProductsList" parameterType="java.util.Map" resultMap="productResultMap">
        SELECT * FROM PRODUCTS
        WHERE ctg = #{ctg}
        ORDER BY ${filter} ${align}
    </select>

    <!-- 상품검색 -->
    <select id="searchProduct" parameterType="String" resultMap="productResultMap">
    	SELECT * FROM PRODUCTS
    	WHERE product_name LIKE CONCAT('%', #{search}, '%')
    </select>

    <!-- 조회수 -->
	<update id="updateHit" parameterType="String" >
		UPDATE PRODUCTS SET HIT=HIT+1 WHERE product_id=#{productId}
	</update>
	
	<!-- 주문 -->
	 <insert id="insertOrder" parameterType="java.util.Map">
        INSERT INTO ORDERS (user_id, product_id, product_qty) values(#{user_id},#{product_id},1)
    </insert>
</mapper>
